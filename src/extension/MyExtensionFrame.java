/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package extension;

import host.IHostApplication;
import javafx.application.Platform;
import javafx.embed.swing.JFXPanel;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author duongtb
 */
public class MyExtensionFrame extends javax.swing.JFrame implements IExtension {
    final int FRAME_WIDTH = 1000;
    final int FRAME_HEIGHT = 500;
    IHostApplication theApp;
    
    /**
     * Creates new form MyExtensionFrame
     */
    public MyExtensionFrame() {
        initComponents();        
    }

    public void setHostApp(IHostApplication inHostApp){
        theApp = inHostApp;    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public String getExtensionName() {
        return "MyExtension";
    }

    @Override
    public String getExtensionTitle() {
        return "An Extension for Algorithm";
    }

    @Override
    public void executeVisualization() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyExtensionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyExtensionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyExtensionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyExtensionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        System.out.println("the extension is started");
        /* Create and display the form */
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                System.out.println("the extension frame is showing");
                JFrame frame = new MyExtensionFrame();
                frame.getContentPane().removeAll();
                JFXPanel fxPanel = new JFXPanel();
                frame.setContentPane(fxPanel);
//                frame.getContentPane().add(fxPanel);
//                frame.pack();
//                frame.repaint();
                frame.setSize(FRAME_WIDTH, FRAME_HEIGHT);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
                Platform.runLater(new Runnable() {
                    @Override
                    public void run() {
                        System.out.println("asdf");
                        initFx(fxPanel);
                    }
                });
            }
        });
    }
    private void initFx(JFXPanel fxPanel) {
        Scene scene = createScene();
        fxPanel.setScene(scene);
    }
    private Scene createScene() {
        VisualPane visualPane = new VisualPane();
        Pane pane = new Pane();
        pane.getChildren().add(visualPane);
        Scene result = new Scene(pane);
        return result;
    }

    @Override
    public String getCreditInformation() {
        return "This extension developed by our group of Tran Binh Duong and friends";
    }
//    public static void main(String [] args) {
//        MyExtensionFrame x = new MyExtensionFrame();
//        x.executeVisualization();
//    }
}
